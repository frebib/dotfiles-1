#!/usr/bin/env bash

cd $HOME
source $HOME/dotfiles/init/scripting.sh

if xrandr | grep "\<connected\>" | grep $DISPLAY2_NAME; then
  SINGLE_DISPLAY="false"
else
  SINGLE_DISPLAY="true"
fi

bspc config border_width 2
bspc config top_padding $PANEL_HEIGHT
bspc config split_ratio 0.50
bspc config single_monocle true
bspc config gapless_monocle true
bspc config borderless_monocle $SINGLE_DISPLAY
bspc config remove_disabled_monitors true
bspc config remove_unplugged_monitors true
bspc config normal_border_color '#333333'
bspc config focused_border_color '#F9D3A5'
bspc config initial_polarity second_child
bspc config window_gap 0

bspc config click_to_focus button1
bspc config pointer_modifier control
bspc config pointer_action1 resize_corner
bspc config pointer_action2 resize_side
bspc config pointer_action3 move

# Check if the second monitor is connected
if $SINGLE_DISPLAY; then
  bspc monitor "$DISPLAY1_NAME" -d one two three four five six seven eight nine ten dmp
  bspc monitor "$DISPLAY2_NAME" -d None
else
  echo Setting up second display
  bspc monitor "$DISPLAY1_NAME" -d one two three four five six seven dmp
  bspc monitor "$DISPLAY2_NAME" -d uno dos
  # Check if the monitors are in the wrong order
  if ! bspc query --monitors --names | head -1 | grep $DISPLAY1_NAME; then
    bspc monitor "$DISPLAY1_NAME" --swap "$DISPLAY2_NAME"
  fi
fi

# Set background
feh --bg-fill $BACKGROUND_IMAGE

pid_dir=/tmp/dotfiles_pids
panel_pid_file=$pid_dir/panel$DISPLAY
compton_pid_file=$pid_dir/compton$DISPLAY
sxhkd_pid_file=$pid_dir/sxhkd$DISPLAY
mkdir -p $pid_dir

# Kill old applications
[ -f $panel_pid_file ] && kill $(cat $panel_pid_file)
[ -f $compton_pid_file ] && kill $(cat $compton_pid_file)
[ -f $sxhkd_pid_file ] && kill $(cat $sxhkd_pid_file)

# Start applications
python3.6 $df/panel/panel.py & panel_pid=$!
compton & compton_pid=$!
sxhkd & sxhkd_pid=$!

# Record spawned PIDs
echo $panel_pid > $panel_pid_file
echo $compton_pid > $compton_pid_file
echo $sxhkd_pid > $sxhkd_pid_file
